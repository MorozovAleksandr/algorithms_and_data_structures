-- ПРИНЦИП РАБОТЫ --
В данном алгоритме используется подход инвертированного индекса.
Имеется две основные структуры данных:
1 - Массив документов, в котором хранится коллекция в формате: слово → количество вхождений в документе
2 - Коллекция инвертированных индексов в формате: слово → документы, в которых имеется данное слово
С помощью этих двух структур и происходит весь механизм работы.
Мы ищем слово из запроса в коллекции инвертированных индексов, далее берём его количество вхождений для данного документа
и увеличиваем релевантность для нужного документа.

-- ДОКАЗАТЕЛЬСТВО КОРРЕКТНОСТИ --
Так как у нас есть две заполненные структуры (инвертированный индекс, количество вхождений слов в документе),
имея запрос, мы можем корректно рассчитать релевантность документа относительно запроса.

-- ВРЕМЕННАЯ СЛОЖНОСТЬ --
- n - количество документов
- m - количество слов в документе (в среднем)
- k - количество запросов
- j - количество уникальных слов в запросе (в среднем)

Построение инвертированного индекса и массива коллекций: O(n * m)
Поиск слова из запроса: O(k * j)

Итоговая временная сложность программы: O(n * m + k * j)

-- ПРОСТРАНСТВЕННАЯ СЛОЖНОСТЬ --
- n - количество документов
- m - количество слов в документе (в среднем)

Построение инвертированного индекса и массива коллекций: O(n * m)
Структура данных для хранения релевантных документов: O(n)

Итоговая пространственная сложность программы: O(n * m)