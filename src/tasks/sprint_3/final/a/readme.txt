-- ПРИНЦИП РАБОТЫ --
- left - левый индекс текущего диапазона
- mid - центральный индекс текущего диапазона
- right - правый индекс текущего диапазона
- taget - искомый элемент
- [begin,end] - сегмент, например [mid, right]
Реализован алгоритм поиска на основе бинарного поиска, за исключением того,
что изначально мы пытаемся найти отсортированный сегмент - [left, mid] или [mid, right],
и при необходимости мы двигаем left/right на основе - taget и сегмента [begin,end].

-- ДОКАЗАТЕЛЬСТВО КОРРЕКТНОСТИ --
На каждой итерации алгоритм сужает диапазон поиска вдвое, сохраняя логарифмическую сложность.
Даже если массив повернут, хотя бы одна из половин всегда отсортирована,
что позволяет корректно применять бинарный поиск.

-- ВРЕМЕННАЯ СЛОЖНОСТЬ --
- n - количество элементов в массиве
Бинарный поиск имеет логарифмическую скорость работы O(log n),
текущий алгоритм построен на основе бинарного поиска

Итоговая временная сложность программы: - O(log n)

-- ПРОСТРАНСТВЕННАЯ СЛОЖНОСТЬ --
Алгоритм использует константное дополнительное пространство(переменные).

Итоговая пространственная сложность - O(1)
