5-- ПРИНЦИП РАБОТЫ --
Алгоритм подсчитывает количество островов на карте и определяет размер самого большого из них.
Алгоритм использует обход в ширину (BFS) для поиска связных компонент земли.

Основные этапы работы:
1) Считываются размеры карты и сама карта в виде двумерного массива.
2) Создаётся вспомогательная матрица visited, чтобы отмечать уже посещённые клетки.
3) Для каждой клетки поля, если клетка === земля (#) и ещё не посещена, запускается BFS.
4) BFS добавляет начальную клетку в очередь и последовательно исследует все соседние клетки (вверх, вниз, влево, вправо), которые также являются землей и ещё не посещены.
5) Каждая новая посещённая клетка увеличивает счётчик текущего острова.
6) После завершения обхода текущего острова:
 - Увеличивается общий счётчик островов.
 - Проверяется, не является ли размер текущего острова максимальным.

-- ДОКАЗАТЕЛЬСТВО КОРРЕКТНОСТИ --
Корректность алгоритма основана на свойствах обхода в ширину (BFS) при поиске связных компонент:
 - BFS гарантирует, что из любой стартовой точки будут найдены все достижимые клетки земли, образующие один остров.
 - Каждая клетка посещается ровно один раз, что исключает повторный учёт островов.
 - Проверка четырёх направлений (вверх, вниз, влево, вправо) обеспечивает корректное определение связности.
 - В результате каждая группа клеток земли будет учтена как отдельный остров, а вычисление размера позволит определить самый большой.

-- ВРЕМЕННАЯ СЛОЖНОСТЬ --
- n — количество строк карты
- m — количество столбцов карты
Каждая клетка посещается не более одного раза, и для каждой проверяются до 4 соседей.
Итоговая временная сложность: O(n * m)

-- ПРОСТРАНСТВЕННАЯ СЛОЖНОСТЬ --
- n — количество строк карты
- m — количество столбцов карты
Хранение поля: O(n * m)
Массив visited: O(n * m)
Очередь BFS: в худшем случае может содержать все клетки одного острова: O(n * m)
Итоговая пространственная сложность: O(n * m)